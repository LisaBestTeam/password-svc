// +build !skippackr
// Code generated by github.com/gobuffalo/packr/v2. DO NOT EDIT.

// You can use the "packr2 clean" command to clean up this,
// and any other packr generated files.
package packrd

import (
	"github.com/gobuffalo/packr/v2"
	"github.com/gobuffalo/packr/v2/file/resolver"
)

var _ = func() error {
	const gk = "6455c51ff32bce221a80fb856254a82f"
	g := packr.New(gk, "")
	hgr, err := resolver.NewHexGzip(map[string]string{
		"683efbe2974a022ac183e1a06ad0f76c": "1f8b08000000000000ff64cfbdaec2300c86e1dd57e1f11c41afa02b0c2c4c45628b42fd95462a4d644754bd7bc49f08c593a567b0dfaae2d5259cd567f02111b58afb9afd6900276f364515fa2366e620bc98ddbe593fa8f7d6bbd8b92e0c7852b33dbecc300ad4791185d9b7295a846ba91fc3d8ea9cb2b9f71b85e539e1f71efdd74465d1264e2391684c8ba2fa160000ffffd3ddacc1f8000000",
	})
	if err != nil {
		panic(err)
	}
	g.DefaultResolver = hgr

	func() {
		b := packr.New("migrations", "./migrations")
		b.SetResolver("001_inital.sql", packr.Pointer{ForwardBox: gk, ForwardPath: "683efbe2974a022ac183e1a06ad0f76c"})
	}()
	return nil
}()
